import type { SidebarsConfig, PropSidebarItemHtml, PropSidebarItemLink } from '@docusaurus/plugin-content-docs';

function separator(): PropSidebarItemHtml {
  return {
    type: 'html',
    value: '<hr>',
    defaultStyle: true,
  }
}

function link(label: string, href: string): PropSidebarItemLink {
  return {
    type: 'link',
    label: label,
    href: href,
  }
}

function doc(docId: string, label?: string): any {
  return {
    type: 'doc',
    label: label,
    id: docId,
  }
}

const sidebars: SidebarsConfig = {
  // By default, Docusaurus generates a sidebar from the docs folder structure
  // tutorialSidebar: [{type: 'autogenerated', dirName: '.'}],
  mainSidebar: [
    "index",
    {
      type: 'category',
      label: 'Quick Start',
      collapsed: false,
      collapsible: true,
      items: [
        doc("getting-started/csharp", "C# .NET"),
        doc("getting-started/cpp", "C++"),
        doc("getting-started/electron", "JS / Electron"),
        doc("getting-started/rust", "Rust"),
      ]
    },
    {
      type: 'category',
      label: 'Sample Apps',
      items: [
        link("C# / AvaloniaUI", "https://github.com/velopack/velopack/tree/master/samples/AvaloniaCrossPlat"),
        link("C# / WPF", "https://github.com/velopack/velopack/tree/master/samples/VeloWpfSample"),
        link("C++ / Win32", "https://github.com/velopack/velopack.fusion/tree/master/for-cpp/samples/win32"),
        link("JS / Electron", "https://github.com/velopack/velopack.fusion/tree/master/for-cpp/samples/win32"),
        link("Rust / Iced", "https://github.com/velopack/velopack.fusion/tree/master/for-cpp/samples/win32"),
      ]
    }
  ],

  // But you can create a sidebar manually
  /*
  tutorialSidebar: [
    'intro',
    'hello',
    {
      type: 'category',
      label: 'Tutorial',
      items: ['tutorial-basics/create-a-document'],
    },
  ],
   */
};

export default sidebars;
